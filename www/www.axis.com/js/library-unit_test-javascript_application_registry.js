/**
 * Framework standard header comments.
 *
 * “UTF-8” Encoding Check - Smart quotes instead of three bogus characters.
 * Smart quotes may show as a single bogus character if the font
 * does not support the smart quote character.
 *
 * Goal: efficient, debugger friendly code.
 *
 * Conservation of keystrokes is acheived by using tabs.
 * Tabs and indentation are rendered and inserted as 4 columns, not spaces.
 * Using actual tabs, not spaces in place of tabs. This conserves keystrokes.
 *
 * [vim]
 * VIM directives below to match the default setup for visual studio.
 * The directives are explained below followed by a vim modeline.
 * The modeline causes vim to render and manipulate the file as described.
 * noexpandtab - When the tab key is depressed, use actual tabs, not spaces.
 * tabstop=4 - Tabs are rendered as four columns.
 * shiftwidth=4 - Indentation is inserted and rendered as four columns.
 * softtabstop=4 - A typed tab in insert mode equates to four columns.
 *
 * vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4:
 *
 * [emacs]
 * Emacs directives below to match the default setup for visual studio.
 *
 * Local variables:
 * tab-width: 4
 * c-basic-offset: 4
 * c-hanging-comment-ender-p: nil
 * c-indent-level: 4
 * indent-tabs-mode: t
 * tab-stop-list: '(4 8 12 16 20 24 28 32 36 40 44 48 52 56 60)
 * End:
 */
if (!jQuery) {
	alert('JQuery is either not loaded or unavailable.');
}

/**
 * RegistryClass definition
 * this class to manage user Preferences, etc.
 * we will have only one instance for request scope
 */

var RegistryClass = function(memberArray) {
	/** _memberArray should be generated by php
	    pulling from database during load time
	**/
	// E.g. {"Apple" : "Red", "Orange" : "Orange", "Pear" : "Green"};

	this._memberArray = memberArray;
	this.set = function (key, value) {
        this._memberArray[key] = value;
        // call backend update by
        _updateRepository(key, value);
    };

    this.get = function (key) {
    	if(typeof (this._memberArray[key]) !== "undefined") {
        	return(this._memberArray[key]);
    	}
    	else {
    		return;
    	}
    };

    /** private method to update backend data via ajax call **/
    var _updateRepository = function (key, value) {
    	alert("Not implemented backend ajax call to save data to registry table in database yet");
    }

}
